// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id              String            @id @default(auto()) @map("_id") @db.ObjectId
  email           String            @unique
  name            String
  password        String            @unique
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  isVerified      Boolean           @default(false)
  socialPassword  SocialPasswords[]
  PasswordPinCode PasswordPinCode[]
  passwords       AddPassword[]
  lists           AddLists[]
}

model AddPassword {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  catagory    String
  name        String
  password    String
  url         String?
  notes       String?
  image       String?
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  User        User?    @relation(fields: [userId], references: [id])
  userId      String?  @db.ObjectId
}

model AddLists {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  title       String?
  description String?
  priority    String?
  date        String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  User        User?       @relation(fields: [userId], references: [id])
  userId      String?     @db.ObjectId
  listTypes   ListTypes[]
}

model ListTypes {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  detail     String
  AddLists   AddLists? @relation(fields: [addListsId], references: [id])
  addListsId String?   @db.ObjectId
}

model SocialPasswords {
  id         String         @id @default(auto()) @map("_id") @db.ObjectId
  socialName String
  passwords  PasswordType[]
  userId     String         @db.ObjectId
  user       User           @relation(fields: [userId], references: [id])
}

model PasswordType {
  id                String           @id @default(auto()) @map("_id") @db.ObjectId
  passwordName      String
  password          String
  SocialId          String           @db.ObjectId
  SocialPasswords   SocialPasswords? @relation(fields: [socialPasswordsId], references: [id])
  socialPasswordsId String?          @db.ObjectId
}

model PasswordPinCode {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  pinCode String
  userId  String @db.ObjectId
  user    User   @relation(fields: [userId], references: [id])
}
